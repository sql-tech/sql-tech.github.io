{
    "installation": {
        "header": "資料庫安裝說明書",
        "content": "<h2>簡介</h2><p>本節提供MySQL和Oracle在Windows、Linux、MacOS的安裝指南，包含步驟、模擬截圖、參數表格和注意事項，幫助您配置資料庫環境。</p><div class=\"sub-accordion\" id=\"mysql_windows\"><div class=\"sub-accordion-header\" data-id=\"mysql_windows\">MySQL 安裝 - Windows</div><div class=\"sub-accordion-content\"><h3>簡介</h3><p>在Windows 10/11安裝MySQL 8.0，適用64位系統。</p><h3>安裝步驟</h3><ol><li><p><strong>下載</strong>：訪問<a href=\"https://dev.mysql.com/downloads/installer/\">MySQL官網</a>，選Windows版本（~400MB）。</p><pre class=\"mock-screenshot\">\n--------------------\n| Download MySQL 8.0 |\n| [Windows x64]     |\n| [Download Button] |\n--------------------</pre></li><li><p><strong>運行</strong>：雙擊<code>mysql-installer-web-community-8.0.x.msi</code>，選「Developer Default」，點Next。</p><pre class=\"mock-screenshot\">\n--------------------\n| Setup Type       |\n| [x] Developer    |\n| [Next Button]    |\n--------------------</pre></li><li><p><strong>依賴項</strong>：檢查環境（如.NET Framework），點「Execute」安裝缺少項目。</p></li><li><p><strong>配置</strong>：選「Standalone」，埠3306，點Next。</p><pre class=\"mock-screenshot\">\n--------------------\n| Port: [3306]     |\n| [Standalone]     |\n| [Next Button]    |\n--------------------</pre></li><li><p><strong>密碼</strong>：設根用戶密碼（如「MySQL2025!」），點Next。</p></li><li><p><strong>安裝</strong>：點「Execute」，完成後勾選「Start MySQL」，點Finish。</p></li><li><p><strong>驗證</strong>：命令提示字元輸入<code>mysql -u root -p</code>，檢查<code>mysql></code>提示符。</p><pre><code>mysql> SHOW DATABASES;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n+--------------------+</code></pre></li></ol><h3>參數</h3><table><tr><th>參數</th><th>值</th></tr><tr><td>版本</td><td>MySQL 8.0</td></tr><tr><td>路徑</td><td>C:\\Program Files\\MySQL</td></tr><tr><td>埠</td><td>3306</td></tr><tr><td>用戶</td><td>root</td></tr></table><h3>注意</h3><ul><li>需2GB空間。</li><li>防火牆允許3306埠。</li><li>忘記密碼用<code>mysqld --skip-grant-tables</code>重設。</li></ul><h3>結構</h3><pre class=\"table-diagram\">mysql.user\n+------------+---------+\n| user       | VARCHAR |\n| host       | VARCHAR |\n| password   | VARCHAR |\n+------------+---------+</pre></div></div><div class=\"sub-accordion\" id=\"mysql_linux\"><div class=\"sub-accordion-header\" data-id=\"mysql_linux\">MySQL 安裝 - Linux</div><div class=\"sub-accordion-content\"><h3>簡介</h3><p>在Ubuntu 22.04安裝MySQL 8.0，適用Linux發行版。</p><h3>安裝步驟</h3><ol><li><p><strong>更新</strong>：<code>sudo apt update && sudo apt upgrade</code></p><pre class=\"mock-screenshot\">\n--------------------\n| $ sudo apt update |\n| [Progress Bar]    |\n| Hit:1 http://...  |\n--------------------</pre></li><li><p><strong>安裝</strong>：<code>sudo apt install mysql-server</code></p></li><li><p><strong>啟動</strong>：<code>sudo systemctl start mysql && sudo systemctl enable mysql</code></p></li><li><p><strong>安全</strong>：<code>sudo mysql_secure_installation</code>，設密碼，移除不安全選項。</p><pre class=\"mock-screenshot\">\n--------------------\n| Root password     |\n| [Input Field]     |\n| [Y/n] Remove...?  |\n--------------------</pre></li><li><p><strong>驗證</strong>：<code>mysql -u root -p</code>，檢查資料庫。</p><pre><code>mysql> SHOW DATABASES;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n+--------------------+</code></pre></li></ol><h3>參數</h3><table><tr><th>參數</th><th>值</th></tr><tr><td>版本</td><td>MySQL 8.0</td></tr><tr><td>路徑</td><td>/var/lib/mysql</td></tr><tr><td>埠</td><td>3306</td></tr><tr><td>服務</td><td>mysql</td></tr></table><h3>注意</h3><ul><li>需root權限。</li><li>檢查<code>/etc/mysql</code>配置。</li><li>允許3306埠。</li></ul><h3>結構</h3><pre class=\"table-diagram\">mysql.user\n+------------+---------+\n| user       | VARCHAR |\n| host       | VARCHAR |\n| password   | VARCHAR |\n+------------+---------+</pre></div></div><div class=\"sub-accordion\" id=\"mysql_macos\"><div class=\"sub-accordion-header\" data-id=\"mysql_macos\">MySQL 安裝 - MacOS</div><div class=\"sub-accordion-content\"><h3>簡介</h3><p>在MacOS Ventura 13安裝MySQL 8.0，使用Homebrew。</p><h3>安裝步驟</h3><ol><li><p><strong>Homebrew</strong>：<code>/bin/bash -c \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)\"</code></p><pre class=\"mock-screenshot\">\n--------------------\n| $ curl -fsSL ...  |\n| [Installing]      |\n| ==> Success       |\n--------------------</pre></li><li><p><strong>安裝</strong>：<code>brew install mysql</code></p></li><li><p><strong>啟動</strong>：<code>brew services start mysql</code></p></li><li><p><strong>密碼</strong>：<code>mysql_secure_installation</code></p><pre class=\"mock-screenshot\">\n--------------------\n| Set password?     |\n| [Y/n] [Input]     |\n| [Continue]        |\n--------------------</pre></li><li><p><strong>驗證</strong>：<code>mysql -u root -p</code></p><pre><code>mysql> SHOW DATABASES;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mysql              |\n+--------------------+</code></pre></li></ol><h3>參數</h3><table><tr><th>參數</th><th>值</th></tr><tr><td>版本</td><td>MySQL 8.0</td></tr><tr><td>路徑</td><td>/usr/local/Cellar/mysql</td></tr><tr><td>埠</td><td>3306</td></tr><tr><td>服務</td><td>mysql</td></tr></table><h3>注意</h3><ul><li>更新Homebrew。</li><li>檢查<code>/usr/local/etc/my.cnf</code>。</li></ul><h3>結構</h3><pre class=\"table-diagram\">mysql.user\n+------------+---------+\n| user       | VARCHAR |\n| host       | VARCHAR |\n| password   | VARCHAR |\n+------------+---------+</pre></div></div><div class=\"sub-accordion\" id=\"oracle_windows\"><div class=\"sub-accordion-header\" data-id=\"oracle_windows\">Oracle 安裝 - Windows</div><div class=\"sub-accordion-content\"><h3>簡介</h3><p>在Windows 10/11安裝Oracle 21c XE。</p><h3>安裝步驟</h3><ol><li><p><strong>下載</strong>：訪問<a href=\"https://www.oracle.com/database/technologies/xe-downloads.html\">Oracle官網</a>，選21c XE（~2GB）。</p><pre class=\"mock-screenshot\">\n--------------------\n| Oracle 21c XE     |\n| [Windows x64]     |\n| [Download Button] |\n--------------------</pre></li><li><p><strong>解壓</strong>：解壓<code>oracle-database-xe-21c.zip</code>至C:\\oracle。</p></li><li><p><strong>運行</strong>：雙擊<code>setup.exe</code>，選路徑C:\\app\\oracle，點Next。</p><pre class=\"mock-screenshot\">\n--------------------\n| Destination       |\n| [C:\\app\\oracle]   |\n| [Next Button]     |\n--------------------</pre></li><li><p><strong>密碼</strong>：為SYS/SYSTEM設密碼（如「Oracle2025!」），點Next。</p></li><li><p><strong>安裝</strong>：點Install，約15分鐘，自動啟動。</p></li><li><p><strong>驗證</strong>：<code>sqlplus / as sysdba</code></p><pre><code>SQL> SELECT * FROM v$version;\nBANNER\nOracle Database 21c Express Edition</code></pre></li></ol><h3>參數</h3><table><tr><th>參數</th><th>值</th></tr><tr><td>版本</td><td>Oracle 21c XE</td></tr><tr><td>路徑</td><td>C:\\app\\oracle</td></tr><tr><td>埠</td><td>1521</td></tr><tr><td>服務</td><td>XE</td></tr></table><h3>注意</h3><ul><li>需10GB空間。</li><li>關閉防毒軟體。</li><li>檢查TNS監聽器（<code>lsnrctl status</code>）。</li></ul><h3>結構</h3><pre class=\"table-diagram\">dba_users\n+------------+---------+\n| username   | VARCHAR |\n| user_id    | NUMBER  |\n| created    | DATE    |\n+------------+---------+</pre></div></div><div class=\"sub-accordion\" id=\"oracle_linux\"><div class=\"sub-accordion-header\" data-id=\"oracle_linux\">Oracle 安裝 - Linux</div><div class=\"sub-accordion-content\"><h3>簡介</h3><p>在Oracle Linux 8安裝Oracle 21c XE，透過RPM。</p><h3>安裝步驟</h3><ol><li><p><strong>下載</strong>：下載<code>oracle-database-xe-21c-1.0-1.x86_64.rpm</code>。</p><pre class=\"mock-screenshot\">\n--------------------\n| Oracle 21c RPM    |\n| [Linux x64]       |\n| [Download Button] |\n--------------------</pre></li><li><p><strong>依賴</strong>：<code>sudo dnf install -y oracle-database-preinstall-21c</code></p></li><li><p><strong>安裝</strong>：<code>sudo rpm -ivh oracle-database-xe-21c-1.0-1.x86_64.rpm</code></p></li><li><p><strong>配置</strong>：<code>sudo /etc/init.d/oracle-xe-21c configure</code></p><pre class=\"mock-screenshot\">\n--------------------\n| SYS password      |\n| [Input Field]     |\n| [Continue]        |\n--------------------</pre></li><li><p><strong>驗證</strong>：<code>sqlplus / as sysdba</code></p><pre><code>SQL> SELECT * FROM v$version;\nBANNER\nOracle Database 21c Express Edition</code></pre></li></ol><h3>參數</h3><table><tr><th>參數</th><th>值</th></tr><tr><td>版本</td><td>Oracle 21c XE</td></tr><tr><td>路徑</td><td>/opt/oracle</td></tr><tr><td>埠</td><td>1521</td></tr><tr><td>服務</td><td>XE</td></tr></table><h3>注意</h3><ul><li>需root權限。</li><li>12GB空間。</li><li>設<code>ORACLE_HOME=/opt/oracle/product/21c/dbhomeXE</code>。</li></ul><h3>結構</h3><pre class=\"table-diagram\">dba_users\n+------------+---------+\n| username   | VARCHAR |\n| user_id    | NUMBER  |\n| created    | DATE    |\n+------------+---------+</pre></div></div><div class=\"sub-accordion\" id=\"oracle_macos\"><div class=\"sub-accordion-header\" data-id=\"oracle_macos\">Oracle 安裝 - MacOS</div><div class=\"sub-accordion-content\"><h3>簡介</h3><p>在MacOS Ventura 13用Docker安裝Oracle 21c XE。</p><h3>安裝步驟</h3><ol><li><p><strong>Docker</strong>：下載<a href=\"https://www.docker.com/products/docker-desktop\">Docker Desktop</a>。</p><pre class=\"mock-screenshot\">\n--------------------\n| Docker Desktop    |\n| [MacOS] [500MB]   |\n| [Download Button] |\n--------------------</pre></li><li><p><strong>啟動</strong>：打開Docker Desktop。</p></li><li><p><strong>映像</strong>：<code>docker pull gvenzl/oracle-xe:21-slim</code></p></li><li><p><strong>容器</strong>：<code>docker run -d -p 1521:1521 -e ORACLE_PASSWORD=Oracle2025 gvenzl/oracle-xe:21-slim</code></p><pre class=\"mock-screenshot\">\n--------------------\n| $ docker run ...  |\n| [Container ID]    |\n| Port 1521         |\n--------------------</pre></li><li><p><strong>驗證</strong>：<code>docker exec -it [container_id] sqlplus sys/Oracle2025@//localhost:1521/XE as sysdba</code></p><pre><code>SQL> SELECT * FROM v$version;\nBANNER\nOracle Database 21c Express Edition</code></pre></li></ol><h3>參數</h3><table><tr><th>參數</th><th>值</th></tr><tr><td>版本</td><td>Oracle 21c XE</td></tr><tr><td>映像</td><td>gvenzl/oracle-xe:21-slim</td></tr><tr><td>埠</td><td>1521</td></tr><tr><td>服務</td><td>XE</td></tr></table><h3>注意</h3><ul><li>4GB記憶體分配。</li><li>檢查1521埠。</li><li>容器需<code>docker start [container_id]</code>重啟。</li></ul><h3>結構</h3><pre class=\"table-diagram\">dba_users\n+------------+---------+\n| username   | VARCHAR |\n| user_id    | NUMBER  |\n| created    | DATE    |\n+------------+---------+</pre></div></div>"
    },
    "normalization": {
        "header": "資料庫正規化說明書",
        "content": "<h2>簡介</h2><p>資料庫正規化（Normalization）是設計資料庫的過程，透過消除冗餘資料和確保資料一致性，提升儲存效率和查詢正確性。本節詳細說明第一至第五階正規化（1NF 至 5NF），每階包含定義、規則、範例、表格和圖示，適合初學者與進階使用者。</p><div class=\"sub-accordion\" id=\"first_normal_form\"><div class=\"sub-accordion-header\" data-id=\"first_normal_form\">第一階正規化（1NF）</div><div class=\"sub-accordion-content\"><h3>定義</h3><p>第一階正規化（1NF）要求表格中的每個欄位值為原子值（不可再分），且每列有唯一主鍵，無重複群組。</p><h3>規則</h3><ul><li>每個欄位包含單一值。</li><li>無多值屬性或重複群組。</li><li>每列由主鍵唯一識別。</li></ul><h3>範例</h3><p><strong>未正規化表格</strong>：學生選課表，課程欄包含多值。</p><table><tr><th>學生ID</th><th>姓名</th><th>課程</th></tr><tr><td>1</td><td>張三</td><td>數學,物理</td></tr><tr><td>2</td><td>李四</td><td>化學,生物</td></tr></table><p><strong>1NF 表格</strong>：拆分課程為單一行。</p><table><tr><th>學生ID</th><th>姓名</th><th>課程</th></tr><tr><td>1</td><td>張三</td><td>數學</td></tr><tr><td>1</td><td>張三</td><td>物理</td></tr><tr><td>2</td><td>李四</td><td>化學</td></tr><tr><td>2</td><td>李四</td><td>生物</td></tr></table><h3>圖示</h3><pre class=\"table-diagram\">未正規化\n+------------+--------+--------------+\n| 學生ID     | 姓名   | 課程         |\n+------------+--------+--------------+\n| 1          | 張三   | 數學,物理    |\n| 2          | 李四   | 化學,生物    |\n+------------+--------+--------------+\n\n1NF\n+------------+--------+--------+\n| 學生ID     | 姓名   | 課程   |\n+------------+--------+--------+\n| 1          | 張三   | 數學   |\n| 1          | 張三   | 物理   |\n| 2          | 李四   | 化學   |\n| 2          | 李四   | 生物   |\n+------------+--------+--------+</pre><h3>注意</h3><ul><li>主鍵可為單欄（如學生ID+課程）。</li><li>1NF 可能增加行數，影響儲存效率，需後續正規化。</li></ul></div></div><div class=\"sub-accordion\" id=\"second_normal_form\"><div class=\"sub-accordion-header\" data-id=\"second_normal_form\">第二階正規化（2NF）</div><div class=\"sub-accordion-content\"><h3>定義</h3><p>第二階正規化（2NF）要求表格符合 1NF，且所有非主鍵欄位完全依賴主鍵（無部分依賴）。</p><h3>規則</h3><ul><li>符合 1NF。</li><li>非主鍵欄位不可僅依賴主鍵的一部分（複合主鍵情況）。</li></ul><h3>範例</h3><p><strong>1NF 表格</strong>：學生選課含部分依賴。</p><table><tr><th>學生ID</th><th>課程ID</th><th>姓名</th><th>課程名稱</th></tr><tr><td>1</td><td>101</td><td>張三</td><td>數學</td></tr><tr><td>1</td><td>102</td><td>張三</td><td>物理</td></tr><tr><td>2</td><td>103</td><td>李四</td><td>化學</td></tr></table><p>問題：姓名僅依賴學生ID，課程名稱僅依賴課程ID。</p><p><strong>2NF 表格</strong>：拆為學生表和選課表。</p><table><tr><th>學生ID</th><th>姓名</th></tr><tr><td>1</td><td>張三</td></tr><tr><td>2</td><td>李四</td></tr></table><table><tr><th>學生ID</th><th>課程ID</th><th>課程名稱</th></tr><tr><td>1</td><td>101</td><td>數學</td></tr><tr><td>1</td><td>102</td><td>物理</td></tr><tr><td>2</td><td>103</td><td>化學</td></tr></table><h3>圖示</h3><pre class=\"table-diagram\">1NF\n+------------+----------+--------+------------+\n| 學生ID     | 課程ID   | 姓名   | 課程名稱   |\n+------------+----------+--------+------------+\n| 1          | 101      | 張三   | 數學       |\n| 1          | 102      | 張三   | 物理       |\n| 2          | 103      | 李四   | 化學       |\n+------------+----------+--------+------------+\n\n2NF\n學生\n+------------+--------+\n| 學生ID     | 姓名   |\n+------------+--------+\n| 1          | 張三   |\n| 2          | 李四   |\n+------------+--------+\n\n選課\n+------------+----------+------------+\n| 學生ID     | 課程ID   | 課程名稱   |\n+------------+----------+------------+\n| 1          | 101      | 數學       |\n| 1          | 102      | 物理       |\n| 2          | 103      | 化學       |\n+------------+----------+------------+</pre><h3>注意</h3><ul><li>僅適用複合主鍵表格。</li><li>減少冗餘（如姓名重複）。</li></ul></div></div><div class=\"sub-accordion\" id=\"third_normal_form\"><div class=\"sub-accordion-header\" data-id=\"third_normal_form\">第三階正規化（3NF）</div><div class=\"sub-accordion-content\"><h3>定義</h3><p>第三階正規化（3NF）要求表格符合 2NF，且非主鍵欄位無傳遞依賴（即不依賴其他非主鍵欄位）。</p><h3>規則</h3><ul><li>符合 2NF。</li><li>非主鍵欄位直接依賴主鍵。</li></ul><h3>範例</h3><p><strong>2NF 表格</strong>：選課表含傳遞依賴。</p><table><tr><th>學生ID</th><th>課程ID</th><th>課程名稱</th><th>教師</th></tr><tr><td>1</td><td>101</td><td>數學</td><td>王老師</td></tr><tr><td>1</td><td>102</td><td>物理</td><td>陳老師</td></tr></table><p>問題：教師依賴課程名稱，非主鍵（學生ID+課程ID）。</p><p><strong>3NF 表格</strong>：拆為選課表和課程表。</p><table><tr><th>學生ID</th><th>課程ID</th></tr><tr><td>1</td><td>101</td></tr><tr><td>1</td><td>102</td></tr></table><table><tr><th>課程ID</th><th>課程名稱</th><th>教師</th></tr><tr><td>101</td><td>數學</td><td>王老師</td></tr><tr><td>102</td><td>物理</td><td>陳老師</td></tr></table><h3>圖示</h3><pre class=\"table-diagram\">2NF\n+------------+----------+------------+----------+\n| 學生ID     | 課程ID   | 課程名稱   | 教師     |\n+------------+----------+------------+----------+\n| 1          | 101      | 數學       | 王老師   |\n| 1          | 102      | 物理       | 陳老師   |\n+------------+----------+------------+----------+\n\n3NF\n選課\n+------------+----------+\n| 學生ID     | 課程ID   |\n+------------+----------+\n| 1          | 101      |\n| 1          | 102      |\n+------------+----------+\n\n課程\n+----------+------------+----------+\n| 課程ID   | 課程名稱   | 教師     |\n+----------+------------+----------+\n| 101      | 數學       | 王老師   |\n| 102      | 物理       | 陳老師   |\n+----------+------------+----------+</pre><h3>注意</h3><ul><li>3NF 減少更新異常。</li><li>實務中多止於 3NF。</li></ul></div></div><div class=\"sub-accordion\" id=\"fourth_normal_form\"><div class=\"sub-accordion-header\" data-id=\"fourth_normal_form\">第四階正規化（4NF）</div><div class=\"sub-accordion-content\"><h3>定義</h3><p>第四階正規化（4NF）要求表格符合 3NF，且無多值依賴（非主鍵欄位間獨立）。</p><h3>規則</h3><ul><li>符合 3NF。</li><li>消除非平凡多值依賴。</li></ul><h3>範例</h3><p><strong>3NF 表格</strong>：學生興趣和課程多值依賴。</p><table><tr><th>學生ID</th><th>興趣</th><th>課程</th></tr><tr><td>1</td><td>音樂</td><td>數學</td></tr><tr><td>1</td><td>音樂</td><td>物理</td></tr><tr><td>1</td><td>運動</td><td>數學</td></tr><tr><td>1</td><td>運動</td><td>物理</td></tr></table><p>問題：興趣和課程獨立於學生ID，需拆分。</p><p><strong>4NF 表格</strong>：分為學生興趣表和學生課程表。</p><table><tr><th>學生ID</th><th>興趣</th></tr><tr><td>1</td><td>音樂</td></tr><tr><td>1</td><td>運動</td></tr></table><table><tr><th>學生ID</th><th>課程</th></tr><tr><td>1</td><td>數學</td></tr><tr><td>1</td><td>物理</td></tr></table><h3>圖示</h3><pre class=\"table-diagram\">3NF\n+------------+--------+--------+\n| 學生ID     | 興趣   | 課程   |\n+------------+--------+--------+\n| 1          | 音樂   | 數學   |\n| 1          | 音樂   | 物理   |\n| 1          | 運動   | 數學   |\n| 1          | 運動   | 物理   |\n+------------+--------+--------+\n\n4NF\n學生興趣\n+------------+--------+\n| 學生ID     | 興趣   |\n+------------+--------+\n| 1          | 音樂   |\n| 1          | 運動   |\n+------------+--------+\n\n學生課程\n+------------+--------+\n| 學生ID     | 課程   |\n+------------+--------+\n| 1          | 數學   |\n| 1          | 物理   |\n+------------+--------+</pre><h3>注意</h3><ul><li>4NF 罕用，僅在複雜多值關係時應用。</li><li>拆分可能增加查詢複雜度。</li></ul></div></div><div class=\"sub-accordion\" id=\"fifth_normal_form\"><div class=\"sub-accordion-header\" data-id=\"fifth_normal_form\">第五階正規化（5NF）</div><div class=\"sub-accordion-content\"><h3>定義</h3><p>第五階正規化（5NF）要求表格符合 4NF，且無聯接依賴（不可透過較小表格聯接重構）。</p><h3>規則</h3><ul><li>符合 4NF。</li><li>表格分解後，聯接不產生偽資料。</li></ul><h3>範例</h3><p><strong>4NF 表格</strong>：代理商、產品、公司關係。</p><table><tr><th>代理商</th><th>產品</th><th>公司</th></tr><tr><td>A1</td><td>P1</td><td>C1</td></tr><tr><td>A1</td><td>P2</td><td>C1</td></tr><tr><td>A2</td><td>P1</td><td>C2</td></tr></table><p>問題：聯接依賴導致分解後需三表。</p><p><strong>5NF 表格</strong>：拆為代理商-產品、產品-公司、代理商-公司。</p><table><tr><th>代理商</th><th>產品</th></tr><tr><td>A1</td><td>P1</td></tr><tr><td>A1</td><td>P2</td></tr><tr><td>A2</td><td>P1</td></tr></table><table><tr><th>產品</th><th>公司</th></tr><tr><td>P1</td><td>C1</td></tr><tr><td>P2</td><td>C1</td></tr><tr><td>P1</td><td>C2</td></tr></table><table><tr><th>代理商</th><th>公司</th></tr><tr><td>A1</td><td>C1</td></tr><tr><td>A2</td><td>C2</td></tr></table><h3>圖示</h3><pre class=\"table-diagram\">4NF\n+----------+--------+--------+\n| 代理商   | 產品   | 公司   |\n+----------+--------+--------+\n| A1       | P1     | C1     |\n| A1       | P2     | C1     |\n| A2       | P1     | C2     |\n+----------+--------+--------+\n\n5NF\n代理商-產品\n+----------+--------+\n| 代理商   | 產品   |\n+----------+--------+\n| A1       | P1     |\n| A1       | P2     |\n| A2       | P1     |\n+----------+--------+\n\n產品-公司\n+--------+--------+\n| 產品   | 公司   |\n+--------+--------+\n| P1     | C1     |\n| P2     | C1     |\n| P1     | C2     |\n+--------+--------+\n\n代理商-公司\n+----------+--------+\n| 代理商   | 公司   |\n+----------+--------+\n| A1       | C1     |\n| A2       | C2     |\n+----------+--------+</pre><h3>注意</h3><ul><li>5NF 極少使用，僅在高度複雜關係時必要。</li><li>需權衡查詢性能。</li></ul></div></div>"
    },
    "performance": {
        "header": "資料庫效能提升標準作業流程",
        "content": "<h2>簡介</h2><p>資料庫效能提升是確保快速查詢和穩定運行的關鍵。本節針對 MySQL 和 Oracle，介紹三種方法：資料庫配置優化、正規化調整、SQL 語法優化。每部分包含詳細步驟、範例、表格和圖示，幫助您提升效能。</p><div class=\"sub-accordion\" id=\"mysql_config\"><div class=\"sub-accordion-header\" data-id=\"mysql_config\">MySQL 配置優化</div><div class=\"sub-accordion-content\"><h3>簡介</h3><p>透過調整 MySQL 配置參數，提升查詢速度和資源利用率，適用於高流量應用。</p><h3>步驟</h3><ol><li><p><strong>檢查硬體</strong>：確認 CPU、記憶體（建議 16GB+）、SSD。</p></li><li><p><strong>調整緩衝區</strong>：編輯 <code>/etc/my.cnf</code>，設置 <code>innodb_buffer_pool_size</code> 為記憶體的 60%-70%。</p><pre><code>[mysqld]\ninnodb_buffer_pool_size = 12G\n</code></pre></li><li><p><strong>查詢快取</strong>：啟用 <code>query_cache_type</code>，設 <code>query_cache_size</code>（如 256MB）。</p><pre><code>query_cache_type = 1\nquery_cache_size = 256M\n</code></pre></li><li><p><strong>連線數</strong>：調整 <code>max_connections</code>（如 500），視流量而定。</p><pre><code>max_connections = 500\n</code></pre></li><li><p><strong>重啟</strong>：<code>sudo systemctl restart mysql</code></p></li><li><p><strong>驗證</strong>：檢查狀態 <code>SHOW VARIABLES LIKE 'innodb_buffer_pool_size';</code></p><pre><code>+------------------------+------------+\n| Variable_name          | Value      |\n+------------------------+------------+\n| innodb_buffer_pool_size| 12884901888|\n+------------------------+------------+\n</code></pre></li></ol><h3>參數</h3><table><tr><th>參數</th><th>建議值</th></tr><tr><td>innodb_buffer_pool_size</td><td>12G</td></tr><tr><td>query_cache_size</td><td>256M</td></tr><tr><td>max_connections</td><td>500</td></tr></table><h3>注意</h3><ul><li>依硬體規格調整。</li><li>監控記憶體使用率。</li></ul><h3>結構</h3><pre class=\"table-diagram\">mysql.global_variables\n+------------+---------+\n| variable   | VARCHAR |\n| value      | VARCHAR |\n+------------+---------+</pre></div></div><div class=\"sub-accordion\" id=\"oracle_config\"><div class=\"sub-accordion-header\" data-id=\"oracle_config\">Oracle 配置優化</div><div class=\"sub-accordion-content\"><h3>簡介</h3><p>調整 Oracle 參數，提升效能，適合企業應用。</p><h3>步驟</h3><ol><li><p><strong>檢查資源</strong>：確認記憶體（建議 32GB+）、多核 CPU。</p></li><li><p><strong>記憶體分配</strong>：設 <code>memory_target</code> 為總記憶體的 70%。</p><pre><code>ALTER SYSTEM SET memory_target = 24G SCOPE = SPFILE;\n</code></pre></li><li><p><strong>PGA</strong>：調整 <code>pga_aggregate_target</code>（如 8G）。</p><pre><code>ALTER SYSTEM SET pga_aggregate_target = 8G SCOPE = SPFILE;\n</code></pre></li><li><p><strong>重啟</strong>：<code>SHUTDOWN IMMEDIATE; STARTUP;</code></p></li><li><p><strong>驗證</strong>：<code>SHOW PARAMETER memory_target;</code></p><pre><code>NAME                TYPE   VALUE\n------------------- ------ -------\nmemory_target       big    24G\n</code></pre></li></ol><h3>參數</h3><table><tr><th>參數</th><th>建議值</th></tr><tr><td>memory_target</td><td>24G</td></tr><tr><td>pga_aggregate_target</td><td>8G</td></tr></table><h3>注意</h3><ul><li>需 DBA 權限。</li><li>檢查日誌避免記憶體溢出。</li></ul><h3>結構</h3><pre class=\"table-diagram\">v$parameter\n+------------+---------+\n| name       | VARCHAR |\n| value      | VARCHAR |\n+------------+---------+</pre></div></div><div class=\"sub-accordion\" id=\"normalization_tuning\"><div class=\"sub-accordion-header\" data-id=\"normalization_tuning\">正規化調整</div><div class=\"sub-accordion-content\"><h3>簡介</h3><p>適度反規範化，提升查詢速度，減少 JOIN。</p><h3>步驟</h3><ol><li><p><strong>分析查詢</strong>：找出頻繁 JOIN 的表，如訂單和客戶。</p></li><li><p><strong>反規範化</strong>：將客戶姓名加到訂單表。</p><pre><code>ALTER TABLE orders ADD COLUMN cust_name VARCHAR(50);\nUPDATE orders o JOIN customers c ON o.cust_id = c.id SET o.cust_name = c.name;\n</code></pre></li><li><p><strong>查詢優化</strong>：直接查詢訂單表。</p><pre><code>SELECT order_id, cust_name FROM orders;\n</code></pre></li><li><p><strong>驗證</strong>：比較執行時間。</p><pre><code>EXPLAIN SELECT order_id, cust_name FROM orders;\n</code></pre></li></ol><h3>範例</h3><table><tr><th>order_id</th><th>cust_name</th></tr><tr><td>101</td><td>張三</td></tr></table><h3>注意</h3><ul><li>增加冗餘，需同步更新。</li><li>適用讀多寫少場景。</li></ul><h3>結構</h3><pre class=\"table-diagram\">orders\n+------------+---------+\n| order_id   | INT     |\n| cust_name  | VARCHAR |\n+------------+---------+</pre></div></div><div class=\"sub-accordion\" id=\"sql_optimization\"><div class=\"sub-accordion-header\" data-id=\"sql_optimization\">SQL 語法優化</div><div class=\"sub-accordion-content\"><h3>簡介</h3><p>優化 SQL 語法，減少資源消耗。</p><h3>步驟</h3><ol><li><p><strong>分析計劃</strong>：用 <code>EXPLAIN</code> 檢查查詢。</p><pre><code>EXPLAIN SELECT * FROM employees WHERE dept = 'IT';\n</code></pre></li><li><p><strong>索引</strong>：為常用欄位加索引。</p><pre><code>CREATE INDEX idx_dept ON employees(dept);\n</code></pre></li><li><p><strong>避免全掃</strong>：用具體欄位取代 <code>*</code>。</p><pre><code>SELECT name, salary FROM employees WHERE dept = 'IT';\n</code></pre></li><li><p><strong>驗證</strong>：檢查執行時間。</p><pre><code>SHOW PROFILE;\n</code></pre></li></ol><h3>範例</h3><table><tr><th>name</th><th>salary</th></tr><tr><td>趙六</td><td>60000.00</td></tr></table><h3>注意</h3><ul><li>索引過多影響寫入。</li><li>定期分析查詢效能。</li></ul><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| name  | VARCHAR |\n| salary| DECIMAL |\n| dept  | VARCHAR |\n+-------+---------+</pre></div></div>"
    },
    "select": {
        "header": "SQL SELECT - 查詢資料",
        "content": "<h2>語法</h2><p><code>SELECT</code> 用於從資料表中查詢資料。</p><pre><code>SELECT column1, column2 FROM table_name WHERE condition;</code></pre><h3>範例</h3><h4>一般</h4><p>查詢員工姓名和薪資。</p><pre><code>SELECT name, salary FROM employees;</code></pre><table><tr><th>name</th><th>salary</th></tr><tr><td>張三</td><td>50000.00</td></tr></table><h4>MySQL</h4><p>查詢 IT 部門員工。</p><pre><code>SELECT name, salary FROM employees WHERE department = 'IT';</code></pre><table><tr><th>name</th><th>salary</th></tr><tr><td>趙六</td><td>60000.00</td></tr></table><h4>Oracle</h4><p>查詢前 5 名高薪員工。</p><pre><code>SELECT name, salary FROM employees ORDER BY salary DESC FETCH FIRST 5 ROWS ONLY;</code></pre><table><tr><th>name</th><th>salary</th></tr><tr><td>趙六</td><td>60000.00</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| name  | VARCHAR |\n| salary| DECIMAL |\n+-------+---------+</pre>"
    },
    "distinct": {
        "header": "SQL DISTINCT - 去除重複",
        "content": "<h2>語法</h2><p><code>DISTINCT</code> 去除查詢結果中的重複行。</p><pre><code>SELECT DISTINCT column FROM table_name;</code></pre><h3>範例</h3><h4>一般</h4><p>查詢不重複的部門。</p><pre><code>SELECT DISTINCT department FROM employees;</code></pre><table><tr><th>department</th></tr><tr><td>IT</td></tr><tr><td>HR</td></tr></table><h4>MySQL</h4><p>查詢不重複的職位。</p><pre><code>SELECT DISTINCT job_title FROM employees;</code></pre><table><tr><th>job_title</th></tr><tr><td>Engineer</td></tr><tr><td>Manager</td></tr></table><h4>Oracle</h4><p>查詢不重複的城市。</p><pre><code>SELECT DISTINCT city FROM locations;</code></pre><table><tr><th>city</th></tr><tr><td>Taipei</td></tr><tr><td>Kaohsiung</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+------------+---------+\n| department | VARCHAR |\n+------------+---------+</pre>"
    },
    "where": {
        "header": "SQL WHERE - 條件篩選",
        "content": "<h2>語法</h2><p><code>WHERE</code> 用於篩選符合條件的記錄。</p><pre><code>SELECT column FROM table_name WHERE condition;</code></pre><h3>範例</h3><h4>一般</h4><p>查詢薪資高於 50000 的員工。</p><pre><code>SELECT name, salary FROM employees WHERE salary > 50000;</code></pre><table><tr><th>name</th><th>salary</th></tr><tr><td>張三</td><td>60000.00</td></tr></table><h4>MySQL</h4><p>查詢 IT 部門員工。</p><pre><code>SELECT name FROM employees WHERE department = 'IT';</code></pre><table><tr><th>name</th></tr><tr><td>趙六</td></tr></table><h4>Oracle</h4><p>查詢 2023 年後訂單。</p><pre><code>SELECT order_id FROM orders WHERE order_date > TO_DATE('2023-01-01', 'YYYY-MM-DD');</code></pre><table><tr><th>order_id</th></tr><tr><td>101</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| name  | VARCHAR |\n| salary| DECIMAL |\n+-------+---------+</pre>"
    },
    "and_or": {
        "header": "SQL AND OR - 邏輯運算",
        "content": "<h2>語法</h2><p><code>AND</code> 和 <code>OR</code> 用於組合多個條件。</p><pre><code>SELECT column FROM table_name WHERE condition1 AND condition2;</code></pre><h3>範例</h3><h4>一般</h4><p>查詢 IT 部門且薪資高於 50000 的員工。</p><pre><code>SELECT name FROM employees WHERE department = 'IT' AND salary > 50000;</code></pre><table><tr><th>name</th></tr><tr><td>趙六</td></tr></table><h4>MySQL</h4><p>查詢 IT 或 HR 部門員工。</p><pre><code>SELECT name FROM employees WHERE department = 'IT' OR department = 'HR';</code></pre><table><tr><th>name</th></tr><tr><td>趙六</td></tr><tr><td>林八</td></tr></table><h4>Oracle</h4><p>查詢高薪或近期訂單。</p><pre><code>SELECT order_id FROM orders WHERE amount > 5000 OR order_date > TO_DATE('2023-01-01', 'YYYY-MM-DD');</code></pre><table><tr><th>order_id</th></tr><tr><td>101</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+------------+---------+\n| department | VARCHAR |\n| salary     | DECIMAL |\n+------------+---------+</pre>"
    },
    "in": {
        "header": "SQL IN - 多值匹配",
        "content": "<h2>語法</h2><p><code>IN</code> 用於匹配多個值。</p><pre><code>SELECT column FROM table_name WHERE column IN (value1, value2);</code></pre><h3>範例</h3><h4>一般</h4><p>查詢 IT 和 HR 部門員工。</p><pre><code>SELECT name FROM employees WHERE department IN ('IT', 'HR');</code></pre><table><tr><th>name</th></tr><tr><td>趙六</td></tr><tr><td>林八</td></tr></table><h4>MySQL</h4><p>查詢特定職位員工。</p><pre><code>SELECT name FROM employees WHERE job_title IN ('Engineer', 'Manager');</code></pre><table><tr><th>name</th></tr><tr><td>張三</td></tr></table><h4>Oracle</h4><p>查詢特定城市訂單。</p><pre><code>SELECT order_id FROM orders WHERE city IN ('Taipei', 'Kaohsiung');</code></pre><table><tr><th>order_id</th></tr><tr><td>101</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+------------+---------+\n| department | VARCHAR |\n+------------+---------+</pre>"
    },
    "between": {
        "header": "SQL BETWEEN - 範圍匹配",
        "content": "<h2>語法</h2><p><code>BETWEEN</code> 用於匹配範圍內的值。</p><pre><code>SELECT column FROM table_name WHERE column BETWEEN value1 AND value2;</code></pre><h3>範例</h3><h4>一般</h4><p>查詢薪資在 40000 至 60000 的員工。</p><pre><code>SELECT name, salary FROM employees WHERE salary BETWEEN 40000 AND 60000;</code></pre><table><tr><th>name</th><th>salary</th></tr><tr><td>張三</td><td>50000.00</td></tr></table><h4>MySQL</h4><p>查詢特定日期範圍訂單。</p><pre><code>SELECT order_id FROM orders WHERE order_date BETWEEN '2023-01-01' AND '2023-12-31';</code></pre><table><tr><th>order_id</th></tr><tr><td>101</td></tr></table><h4>Oracle</h4><p>查詢金額範圍訂單。</p><pre><code>SELECT order_id FROM orders WHERE amount BETWEEN 1000 AND 5000;</code></pre><table><tr><th>order_id</th></tr><tr><td>101</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| name  | VARCHAR |\n| salary| DECIMAL |\n+-------+---------+</pre>"
    },
    "wildcard": {
        "header": "SQL 萬用字元 - 模式匹配",
        "content": "<h2>語法</h2><p>萬用字元（如 <code>%</code> 和 <code>_</code>）用於模式匹配，搭配 <code>LIKE</code>。</p><pre><code>SELECT column FROM table_name WHERE column LIKE pattern;</code></pre><h3>範例</h3><h4>一般</h4><p>查詢姓名以「張」開頭的員工。</p><pre><code>SELECT name FROM employees WHERE name LIKE '張%';</code></pre><table><tr><th>name</th></tr><tr><td>張三</td></tr></table><h4>MySQL</h4><p>查詢包含「工程」的職位。</p><pre><code>SELECT name FROM employees WHERE job_title LIKE '%工程%';</code></pre><table><tr><th>name</th></tr><tr><td>張三</td></tr></table><h4>Oracle</h4><p>查詢電話號碼以「09」開頭的客戶。</p><pre><code>SELECT name FROM customers WHERE phone LIKE '09________';</code></pre><table><tr><th>name</th></tr><tr><td>林八</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| name  | VARCHAR |\n+-------+---------+</pre>"
    },
    "like": {
        "header": "SQL LIKE - 模式查詢",
        "content": "<h2>語法</h2><p><code>LIKE</code> 用於模式匹配，搭配萬用字元。</p><pre><code>SELECT column FROM table_name WHERE column LIKE pattern;</code></pre><h3>範例</h3><h4>一般</h4><p>查詢姓名以「張」開頭的員工。</p><pre><code>SELECT name FROM employees WHERE name LIKE '張%';</code></pre><table><tr><th>name</th></tr><tr><td>張三</td></tr></table><h4>MySQL</h4><p>查詢職位包含「工程」的員工。</p><pre><code>SELECT name FROM employees WHERE job_title LIKE '%工程%';</code></pre><table><tr><th>name</th></tr><tr><td>張三</td></tr></table><h4>Oracle</h4><p>查詢地址包含「台北」的客戶。</p><pre><code>SELECT name FROM customers WHERE address LIKE '%台北%';</code></pre><table><tr><th>name</th></tr><tr><td>林八</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| name  | VARCHAR |\n+-------+---------+</pre>"
    },
    "order_by": {
        "header": "SQL ORDER BY - 排序結果",
        "content": "<h2>語法</h2><p><code>ORDER BY</code> 用於對查詢結果排序。</p><pre><code>SELECT column FROM table_name ORDER BY column ASC|DESC;</code></pre><h3>範例</h3><h4>一般</h4><p>按薪資降序查詢員工。</p><pre><code>SELECT name, salary FROM employees ORDER BY salary DESC;</code></pre><table><tr><th>name</th><th>salary</th></tr><tr><td>趙六</td><td>60000.00</td></tr></table><h4>MySQL</h4><p>按姓名升序查詢。</p><pre><code>SELECT name FROM employees ORDER BY name ASC;</code></pre><table><tr><th>name</th></tr><tr><td>張三</td></tr></table><h4>Oracle</h4><p>按訂單日期降序查詢。</p><pre><code>SELECT order_id FROM orders ORDER BY order_date DESC;</code></pre><table><tr><th>order_id</th></tr><tr><td>101</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| name  | VARCHAR |\n| salary| DECIMAL |\n+-------+---------+</pre>"
    },
    "function": {
        "header": "SQL 函數 - 數據處理",
        "content": "<h2>語法</h2><p>SQL 函數用於處理數據，如聚合、字串操作等。</p><pre><code>SELECT FUNCTION(column) FROM table_name;</code></pre><h3>範例</h3><h4>一般</h4><p>計算平均薪資。</p><pre><code>SELECT AVG(salary) FROM employees;</code></pre><table><tr><th>AVG(salary)</th></tr><tr><td>55000.00</td></tr></table><h4>MySQL</h4><p>連接姓名和職位。</p><pre><code>SELECT CONCAT(name, ' - ', job_title) AS employee_info FROM employees;</code></pre><table><tr><th>employee_info</th></tr><tr><td>張三 - Engineer</td></tr></table><h4>Oracle</h4><p>計算字串長度。</p><pre><code>SELECT name, LENGTH(name) AS name_length FROM employees;</code></pre><table><tr><th>name</th><th>name_length</th></tr><tr><td>張三</td><td>2</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| name  | VARCHAR |\n| salary| DECIMAL |\n+-------+---------+</pre>"
    },
    "avg": {
        "header": "SQL 平均值 - 計算平均",
        "content": "<h2>語法</h2><p><code>AVG</code> 計算數值欄位的平均值。</p><pre><code>SELECT AVG(column) FROM table_name;</code></pre><h3>範例</h3><h4>一般</h4><p>計算員工平均薪資。</p><pre><code>SELECT AVG(salary) FROM employees;</code></pre><table><tr><th>AVG(salary)</th></tr><tr><td>55000.00</td></tr></table><h4>MySQL</h4><p>計算 IT 部門平均薪資。</p><pre><code>SELECT AVG(salary) FROM employees WHERE department = 'IT';</code></pre><table><tr><th>AVG(salary)</th></tr><tr><td>60000.00</td></tr></table><h4>Oracle</h4><p>計算訂單平均金額。</p><pre><code>SELECT AVG(amount) FROM orders;</code></pre><table><tr><th>AVG(amount)</th></tr><tr><td>3000.00</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| salary| DECIMAL |\n+-------+---------+</pre>"
    },
    "count": {
        "header": "SQL COUNT - 計數",
        "content": "<h2>語法</h2><p><code>COUNT</code> 計算行數或非空值數量。</p><pre><code>SELECT COUNT(column) FROM table_name;</code></pre><h3>範例</h3><h4>一般</h4><p>計算員工總數。</p><pre><code>SELECT COUNT(*) FROM employees;</code></pre><table><tr><th>COUNT(*)</th></tr><tr><td>5</td></tr></table><h4>MySQL</h4><p>計算 IT 部門員工數。</p><pre><code>SELECT COUNT(*) FROM employees WHERE department = 'IT';</code></pre><table><tr><th>COUNT(*)</th></tr><tr><td>3</td></tr></table><h4>Oracle</h4><p>計算訂單數量。</p><pre><code>SELECT COUNT(order_id) FROM orders;</code></pre><table><tr><th>COUNT(order_id)</th></tr><tr><td>10</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+------------+---------+\n| department | VARCHAR |\n+------------+---------+</pre>"
    },
    "max": {
        "header": "SQL 最大值 - 找最大",
        "content": "<h2>語法</h2><p><code>MAX</code> 返回欄位的最大值。</p><pre><code>SELECT MAX(column) FROM table_name;</code></pre><h3>範例</h3><h4>一般</h4><p>找出最高薪資。</p><pre><code>SELECT MAX(salary) FROM employees;</code></pre><table><tr><th>MAX(salary)</th></tr><tr><td>60000.00</td></tr></table><h4>MySQL</h4><p>找出 IT 部門最高薪資。</p><pre><code>SELECT MAX(salary) FROM employees WHERE department = 'IT';</code></pre><table><tr><th>MAX(salary)</th></tr><tr><td>60000.00</td></tr></table><h4>Oracle</h4><p>找出最大訂單金額。</p><pre><code>SELECT MAX(amount) FROM orders;</code></pre><table><tr><th>MAX(amount)</th></tr><tr><td>5000.00</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| salary| DECIMAL |\n+-------+---------+</pre>"
    },
    "min": {
        "header": "SQL 最小值 - 找最小",
        "content": "<h2>語法</h2><p><code>MIN</code> 返回欄位的最小值。</p><pre><code>SELECT MIN(column) FROM table_name;</code></pre><h3>範例</h3><h4>一般</h4><p>找出最低薪資。</p><pre><code>SELECT MIN(salary) FROM employees;</code></pre><table><tr><th>MIN(salary)</th></tr><tr><td>40000.00</td></tr></table><h4>MySQL</h4><p>找出 IT 部門最低薪資。</p><pre><code>SELECT MIN(salary) FROM employees WHERE department = 'IT';</code></pre><table><tr><th>MIN(salary)</th></tr><tr><td>50000.00</td></tr></table><h4>Oracle</h4><p>找出最小訂單金額。</p><pre><code>SELECT MIN(amount) FROM orders;</code></pre><table><tr><th>MIN(amount)</th></tr><tr><td>1000.00</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| salary| DECIMAL |\n+-------+---------+</pre>"
    },
    "sum": {
        "header": "SQL 總合 - 計算總和",
        "content": "<h2>語法</h2><p><code>SUM</code> 計算數值欄位的總和。</p><pre><code>SELECT SUM(column) FROM table_name;</code></pre><h3>範例</h3><h4>一般</h4><p>計算員工薪資總和。</p><pre><code>SELECT SUM(salary) FROM employees;</code></pre><table><tr><th>SUM(salary)</th></tr><tr><td>275000.00</td></tr></table><h4>MySQL</h4><p>計算 IT 部門薪資總和。</p><pre><code>SELECT SUM(salary) FROM employees WHERE department = 'IT';</code></pre><table><tr><th>SUM(salary)</th></tr><tr><td>180000.00</td></tr></table><h4>Oracle</h4><p>計算訂單總金額。</p><pre><code>SELECT SUM(amount) FROM orders;</code></pre><table><tr><th>SUM(amount)</th></tr><tr><td>30000.00</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| salary| DECIMAL |\n+-------+---------+</pre>"
    },
    "group_by": {
        "header": "SQL GROUP BY - 分組聚合",
        "content": "<h2>語法</h2><p><code>GROUP BY</code> 用於分組並聚合數據。</p><pre><code>SELECT column, AGGREGATE(column2) FROM table_name GROUP BY column;</code></pre><h3>範例</h3><h4>一般</h4><p>按部門計算平均薪資。</p><pre><code>SELECT department, AVG(salary) FROM employees GROUP BY department;</code></pre><table><tr><th>department</th><th>AVG(salary)</th></tr><tr><td>IT</td><td>60000.00</td></tr></table><h4>MySQL</h4><p>按職位計數。</p><pre><code>SELECT job_title, COUNT(*) FROM employees GROUP BY job_title;</code></pre><table><tr><th>job_title</th><th>COUNT(*)</th></tr><tr><td>Engineer</td><td>3</td></tr></table><h4>Oracle</h4><p>按年份計算訂單總額。</p><pre><code>SELECT TO_CHAR(order_date, 'YYYY'), SUM(amount) FROM orders GROUP BY TO_CHAR(order_date, 'YYYY');</code></pre><table><tr><th>TO_CHAR(order_date, 'YYYY')</th><th>SUM(amount)</th></tr><tr><td>2023</td><td>30000.00</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+------------+---------+\n| department | VARCHAR |\n| salary     | DECIMAL |\n+------------+---------+</pre>"
    },
    "having": {
        "header": "SQL HAVING - 分組篩選",
        "content": "<h2>語法</h2><p><code>HAVING</code> 用於篩選分組後的結果。</p><pre><code>SELECT column, AGGREGATE(column2) FROM table_name GROUP BY column HAVING condition;</code></pre><h3>範例</h3><h4>一般</h4><p>找出平均薪資高於 50000 的部門。</p><pre><code>SELECT department, AVG(salary) FROM employees GROUP BY department HAVING AVG(salary) > 50000;</code></pre><table><tr><th>department</th><th>AVG(salary)</th></tr><tr><td>IT</td><td>60000.00</td></tr></table><h4>MySQL</h4><p>找出員工數大於 5 的部門。</p><pre><code>SELECT department, COUNT(*) FROM employees GROUP BY department HAVING COUNT(*) > 5;</code></pre><table><tr><th>department</th><th>COUNT(*)</th></tr><tr><td>IT</td><td>10</td></tr></table><h4>Oracle</h4><p>找出總額超 10000 的年份。</p><pre><code>SELECT TO_CHAR(order_date, 'YYYY'), SUM(amount) FROM orders GROUP BY TO_CHAR(order_date, 'YYYY') HAVING SUM(amount) > 10000;</code></pre><table><tr><th>TO_CHAR(order_date, 'YYYY')</th><th>SUM(amount)</th></tr><tr><td>2023</td><td>30000.00</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+------------+---------+\n| department | VARCHAR |\n| salary     | DECIMAL |\n+------------+---------+</pre>"
    },
    "alias": {
        "header": "SQL 別名 - 欄位或表命名",
        "content": "<h2>語法</h2><p>別名用於為欄位或表指定臨時名稱。</p><pre><code>SELECT column AS alias FROM table_name AS alias;</code></pre><h3>範例</h3><h4>一般</h4><p>為欄位取別名。</p><pre><code>SELECT name AS employee_name, salary AS monthly_salary FROM employees;</code></pre><table><tr><th>employee_name</th><th>monthly_salary</th></tr><tr><td>張三</td><td>50000.00</td></tr></table><h4>MySQL</h4><p>為表取別名。</p><pre><code>SELECT e.name FROM employees AS e WHERE e.department = 'IT';</code></pre><table><tr><th>name</th></tr><tr><td>趙六</td></tr></table><h4>Oracle</h4><p>混合使用別名。</p><pre><code>SELECT o.order_id AS id, o.amount AS total FROM orders o;</code></pre><table><tr><th>id</th><th>total</th></tr><tr><td>101</td><td>3000.00</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| name  | VARCHAR |\n| salary| DECIMAL |\n+-------+---------+</pre>"
    },
    "as": {
        "header": "SQL AS - 指定別名",
        "content": "<h2>語法</h2><p><code>AS</code> 用於指定欄位或表的別名。</p><pre><code>SELECT column AS alias FROM table_name AS alias;</code></pre><h3>範例</h3><h4>一般</h4><p>為欄位取別名。</p><pre><code>SELECT name AS employee_name FROM employees;</code></pre><table><tr><th>employee_name</th></tr><tr><td>張三</td></tr></table><h4>MySQL</h4><p>為表取別名。</p><pre><code>SELECT e.name FROM employees AS e;</code></pre><table><tr><th>name</th></tr><tr><td>趙六</td></tr></table><h4>Oracle</h4><p>為聚合結果取別名。</p><pre><code>SELECT SUM(amount) AS total_amount FROM orders;</code></pre><table><tr><th>total_amount</th></tr><tr><td>30000.00</td></tr></table><h3>結構</h3><pre class=\"table-diagram\">employees\n+-------+---------+\n| name  | VARCHAR |\n+-------+---------+</pre>"
    },
    "join": {
        "header": "SQL 表格連接 - 關聯查詢",
        "content": "<h2>語法</h2><p><code>JOIN</code> 用於關聯多表查詢。</p><pre><code>SELECT column FROM table1 JOIN table2 ON condition;</code></pre><h3>範例</h3><h4>一般</h4><p>查詢員工及其部門名稱。</p><pre><code>SELECT e.name, d.dept_name FROM employees e JOIN departments d ON e.dept_id = d.id;</code></pre><table><tr><th>name</th><th>dept_name</th></tr><tr><td>張三</td><td>IT</td></tr></table><h4>MySQL</h4><p>查詢訂單和客戶資訊。</p><pre><code>SELECT o.order_id, c.name FROM orders o JOIN customers c ON o.cust_id = c.id;</code></pre><table><tr><th>order_id</th><th>name</th></tr