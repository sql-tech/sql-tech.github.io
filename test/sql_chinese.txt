# SQL資料庫百科全書 - 內容文字
# 格式說明：
# - 每個鍵值對以 "key: content" 形式表示，鍵對應 HTML 中的 data-i18n-key。
# - 斷行使用 \n 表示，段落間以空行分隔。
# - 表格內容以純文字形式表示，範例程式碼和圖示僅保留說明文字。
# - 註釋用 # 開頭，僅用於說明，不影響內容。

# 首頁
home_title: 歡迎來到 SQL資料庫百科全書
home_description: 「SQL資料庫百科全書」提供基礎、資料定義、進階 SQL 指令教學，包含一般、MySQL、Oracle範例，搭配表格和表結構圖，適合初學者與專業人士。我們還提供MySQL和Oracle在Windows、Linux、MacOS的安裝指南，步驟詳細，點擊左側目錄，立即開啟您的SQL學習之旅！無論是資料庫新手還是資深開發者，這裡都有您需要的知識與實務指引。

# 側邊欄
sidebar_commands_title: SQL指令清單
sidebar_basic_queries_title: 基礎查詢
sidebar_data_definition_title: 資料定義
sidebar_advanced_sql_title: 進階 SQL
installation_nav: 資料庫安裝說明書
normalization_nav: 資料庫正規化說明書
performance_nav: 資料庫效能提升標準作業流程

# 資料庫安裝說明書
installation_title: 資料庫安裝說明書
installation_intro: 本節提供MySQL和Oracle在Windows、Linux、MacOS的安裝指南，包含步驟、模擬截圖、參數表格和注意事項，幫助您配置資料庫環境。

# MySQL 安裝 - Windows
mysql_windows_title: MySQL 安裝 - Windows
mysql_windows_intro: 在Windows 10/11安裝MySQL 8.0，適用64位系統。
mysql_windows_steps: 1. 下載：訪問MySQL官網，選Windows版本（~400MB）。\n2. 運行：雙擊mysql-installer-web-community-8.0.x.msi，選「Developer Default」，點Next。\n3. 依賴項：檢查環境（如.NET Framework），點「Execute」安裝缺少項目。\n4. 配置：選「Standalone」，埠3306，點Next。\n5. 密碼：設根用戶密碼（如「MySQL2025!」），點Next。\n6. 安裝：點「Execute」，完成後勾選「Start MySQL」，點Finish。\n7. 驗證：命令提示字元輸入mysql -u root -p，檢查mysql>提示符。
mysql_windows_params: 版本: MySQL 8.0\n路徑: C:\Program Files\MySQL\n埠: 3306\n用戶: root
mysql_windows_notes: - 需2GB空間。\n- 防火牆允許3306埠。\n- 忘記密碼用mysqld --skip-grant-tables重設。

# MySQL 安裝 - Linux
mysql_linux_title: MySQL 安裝 - Linux
mysql_linux_intro: 在Ubuntu 22.04安裝MySQL 8.0，適用Linux發行版。
mysql_linux_steps: 1. 更新：sudo apt update && sudo apt upgrade\n2. 安裝：sudo apt install mysql-server\n3. 啟動：sudo systemctl start mysql && sudo systemctl enable mysql\n4. 安全：sudo mysql_secure_installation，設密碼，移除不安全選項。\n5. 驗證：mysql -u root -p，檢查資料庫。
mysql_linux_params: 版本: MySQL 8.0\n路徑: /var/lib/mysql\n埠: 3306\n服務: mysql
mysql_linux_notes: - 需root權限。\n- 檢查/etc/mysql配置。\n- 允許3306埠。

# MySQL 安裝 - MacOS
mysql_macos_title: MySQL 安裝 - MacOS
mysql_macos_intro: 在MacOS Ventura 13安裝MySQL 8.0，使用Homebrew。
mysql_macos_steps: 1. Homebrew：/bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"\n2. 安裝：brew install mysql\n3. 啟動：brew services start mysql\n4. 密碼：mysql_secure_installation\n5. 驗證：mysql -u root -p
mysql_macos_params: 版本: MySQL 8.0\n路徑: /usr/local/Cellar/mysql\n埠: 3306\n服務: mysql
mysql_macos_notes: - 更新Homebrew。\n- 檢查/usr/local/etc/my.cnf。

# Oracle 安裝 - Windows
oracle_windows_title: Oracle 安裝 - Windows
oracle_windows_intro: 在Windows 10/11安裝Oracle 21c XE。
oracle_windows_steps: 1. 下載：訪問Oracle官網，選21c XE（~2GB）。\n2. 解壓：解壓oracle-database-xe-21c.zip至C:\oracle。\n3. 運行：雙擊setup.exe，選路徑C:\app\oracle，點Next。\n4. 密碼：為SYS/SYSTEM設密碼（如「Oracle2025!」），點Next。\n5. 安裝：點Install，約15分鐘，自動啟動。\n6. 驗證：sqlplus / as sysdba
oracle_windows_params: 版本: Oracle 21c XE\n路徑: C:\app\oracle\n埠: 1521\n服務: XE
oracle_windows_notes: - 需10GB空間。\n- 關閉防毒軟體。\n- 檢查TNS監聽器（lsnrctl status）。

# Oracle 安裝 - Linux
oracle_linux_title: Oracle 安裝 - Linux
oracle_linux_intro: 在Oracle Linux 8安裝Oracle 21c XE，透過RPM。
oracle_linux_steps: 1. 下載：下載oracle-database-xe-21c-1.0-1.x86_64.rpm。\n2. 依賴：sudo dnf install -y oracle-database-preinstall-21c\n3. 安裝：sudo rpm -ivh oracle-database-xe-21c-1.0-1.x86_64.rpm\n4. 配置：sudo /etc/init.d/oracle-xe-21c configure\n5. 驗證：sqlplus / as sysdba
oracle_linux_params: 版本: Oracle 21c XE\n路徑: /opt/oracle\n埠: 1521\n服務: XE
oracle_linux_notes: - 需root權限。\n- 12GB空間。\n- 設ORACLE_HOME=/opt/oracle/product/21c/dbhomeXE。

# Oracle 安裝 - MacOS
oracle_macos_title: Oracle 安裝 - MacOS
oracle_macos_intro: 在MacOS Ventura 13用Docker安裝Oracle 21c XE。
oracle_macos_steps: 1. Docker：下載Docker Desktop。\n2. 啟動：打開Docker Desktop。\n3. 映像：docker pull gvenzl/oracle-xe:21-slim\n4. 容器：docker run -d -p 1521:1521 -e ORACLE_PASSWORD=Oracle2025 gvenzl/oracle-xe:21-slim\n5. 驗證：docker exec -it [container_id] sqlplus sys/Oracle2025@//localhost:1521/XE as sysdba
oracle_macos_params: 版本: Oracle 21c XE\n映像: gvenzl/oracle-xe:21-slim\n埠: 1521\n服務: XE
oracle_macos_notes: - 4GB記憶體分配。\n- 檢查1521埠。\n- 容器需docker start [container_id]重啟。

# 資料庫正規化說明書
normalization_title: 資料庫正規化說明書
normalization_intro: 資料庫正規化（Normalization）是設計資料庫的過程，透過消除冗餘資料和確保資料一致性，提升儲存效率和查詢正確性。本節詳細說明第一至第五階正規化（1NF 至 5NF），每階包含定義、規則、範例、表格和圖示，適合初學者與進階使用者。

# 第一階正規化（1NF）
first_normal_form_title: 第一階正規化（1NF）
first_normal_form_definition: 第一階正規化（1NF）要求表格中的每個欄位值為原子值（不可再分），且每列有唯一主鍵，無重複群組。
first_normal_form_rules: - 每個欄位包含單一值。\n- 無多值屬性或重複群組。\n- 每列由主鍵唯一識別。
first_normal_form_example: 未正規化表格：學生選課表，課程欄包含多值。\n1NF 表格：拆分課程為單一行。
first_normal_form_notes: - 主鍵可為單欄（如學生ID+課程）。\n- 1NF 可能增加行數，影響儲存效率，需後續正規化。

# 第二階正規化（2NF）
second_normal_form_title: 第二階正規化（2NF）
second_normal_form_definition: 第二階正規化（2NF）要求表格符合 1NF，且所有非主鍵欄位完全依賴主鍵（無部分依賴）。
second_normal_form_rules: - 符合 1NF。\n- 非主鍵欄位不可僅依賴主鍵的一部分（複合主鍵情況）。
second_normal_form_example: 1NF 表格：學生選課含部分依賴。\n問題：姓名僅依賴學生ID，課程名稱僅依賴課程ID。\n2NF 表格：拆為學生表和選課表。
second_normal_form_notes: - 僅適用複合主鍵表格。\n- 減少冗餘（如姓名重複）。

# 第三階正規化（3NF）
third_normal_form_title: 第三階正規化（3NF）
third_normal_form_definition: 第三階正規化（3NF）要求表格符合 2NF，且非主鍵欄位無傳遞依賴（即不依賴其他非主鍵欄位）。
third_normal_form_rules: - 符合 2NF。\n- 非主鍵欄位直接依賴主鍵。
third_normal_form_example: 2NF 表格：選課表含傳遞依賴。\n問題：教師依賴課程名稱，非主鍵（學生ID+課程ID）。\n3NF 表格：拆為選課表和課程表。
third_normal_form_notes: - 3NF 減少更新異常。\n- 實務中多止於 3NF。

# 第四階正規化（4NF）
fourth_normal_form_title: 第四階正規化（4NF）
fourth_normal_form_definition: 第四階正規化（4NF）要求表格符合 3NF，且無多值依賴（非主鍵欄位間獨立）。
fourth_normal_form_rules: - 符合 3NF。\n- 消除非平凡多值依賴。
fourth_normal_form_example: 3NF 表格：學生興趣和課程多值依賴。\n問題：興趣和課程獨立於學生ID，需拆分。\n4NF 表格：分為學生興趣表和學生課程表。
fourth_normal_form_notes: - 4NF 罕用，僅在複雜多值關係時應用。\n- 拆分可能增加查詢複雜度。

# 第五階正規化（5NF）
fifth_normal_form_title: 第五階正規化（5NF）
fifth_normal_form_definition: 第五階正規化（5NF）要求表格符合 4NF，且無聯接依賴（不可透過較小表格聯接重構）。
fifth_normal_form_rules: - 符合 4NF。\n- 表格分解後，聯接不產生偽資料。
fifth_normal_form_example: 4NF 表格：代理商、產品、公司關係。\n問題：聯接依賴導致分解後需三表。\n5NF 表格：拆為代理商-產品、產品-公司、代理商-公司。
fifth_normal_form_notes: - 5NF 極少使用，僅在高度複雜關係時必要。\n- 需權衡查詢性能。

# 資料庫效能提升標準作業流程
performance_title: 資料庫效能提升標準作業流程
performance_intro: 資料庫效能提升是確保快速查詢和穩定運行的關鍵。本節針對 MySQL 和 Oracle，介紹三種方法：資料庫配置優化、正規化調整、SQL 語法優化。每部分包含詳細步驟、範例、表格和圖示，幫助您提升效能。

# MySQL 配置優化
mysql_config_title: MySQL 配置優化
mysql_config_intro: 透過調整 MySQL 配置參數，提升查詢速度和資源利用率，適用於高流量應用。
mysql_config_steps: 1. 檢查硬體：確認 CPU、記憶體（建議 16GB+）、SSD。\n2. 調整緩衝區：編輯 /etc/my.cnf，設置 innodb_buffer_pool_size 為記憶體的 60%-70%。

# DROP TABLE
drop_table_title: SQL DROP TABLE - 刪除資料表
drop_table_syntax: DROP TABLE 刪除資料表。
drop_table_example_general: 刪除員工表。
drop_table_example_mysql: 刪除表，若存在。
drop_table_example_oracle: 刪除表並清除回收站。

# TRUNCATE TABLE
truncate_table_title: SQL TRUNCATE TABLE - 清空資料表
truncate_table_syntax: TRUNCATE TABLE 清空資料表資料。
truncate_table_example_general: 清空員工表資料。
truncate_table_example_mysql: 清空訂單表。
truncate_table_example_oracle: 清空產品表並重用空間。

# USE
use_title: SQL USE - 選擇資料庫
use_syntax: USE 選擇要操作的資料庫（主要用於 MySQL）。
use_example_general: 選擇公司資料庫（通用語法依賴資料庫系統）。
use_example_mysql: 選擇員工資料庫。
use_example_oracle: Oracle 使用模式切換（非 USE 語法）。

# INSERT INTO
insert_into_title: SQL INSERT INTO - 插入資料
insert_into_syntax: INSERT INTO 插入新記錄。
insert_into_example_general: 插入員工記錄。
insert_into_example_mysql: 插入多筆記錄。
insert_into_example_oracle: 使用序列插入。

# UPDATE
update_title: SQL UPDATE - 更新資料
update_syntax: UPDATE 更新資料表記錄。
update_example_general: 更新員工薪資。
update_example_mysql: 更新多列。
update_example_oracle: 更新符合條件的記錄。

# DELETE FROM
delete_from_title: SQL DELETE FROM - 刪除資料
delete_from_syntax: DELETE FROM 刪除資料表記錄。
delete_from_example_general: 刪除特定員工。
delete_from_example_mysql: 刪除部門員工。
delete_from_example_oracle: 刪除舊訂單。

# UNION
union_title: SQL UNION - 合併查詢結果
union_syntax: UNION 合併查詢結果，去重複。
union_example_general: 合併員工和客戶姓名。
union_example_mysql: 合併部門員工，排序。
union_example_oracle: 合併訂單產品ID。

# UNION ALL
union_all_title: SQL UNION ALL - 合併查詢結果（含重複）
union_all_syntax: UNION ALL 合併查詢結果，保留重複。
union_all_example_general: 合併員工和客戶姓名，含重複。
union_all_example_mysql: 合併部門員工，含重複。
union_all_example_oracle: 合併訂單產品ID，含重複。

# 內嵌視觀表
nested_view_title: SQL 內嵌視觀表 - 子查詢作為視圖
nested_view_syntax: 內嵌視觀表（子查詢）用於 FROM 子句中作為臨時表。
nested_view_example_general: 從高薪員工子查詢中選擇資料。
nested_view_example_mysql: 使用內嵌視圖查詢部門人數。
nested_view_example_oracle: 從訂單總額子查詢中選擇資料。

# INTERSECT
intersect_title: SQL INTERSECT - 交集結果
intersect_syntax: INTERSECT 返回多個查詢的交集（支援於 Oracle）。
intersect_example_general: 查找員工和客戶共有的姓名（通用語法依賴資料庫）。
intersect_example_mysql: MySQL 不支援 INTERSECT，可用 JOIN 模擬。
intersect_example_oracle: 查找共有的產品ID。

# MINUS
minus_title: SQL MINUS - 差集結果
minus_syntax: MINUS 返回第一個查詢有但第二個查詢沒有的結果（支援於 Oracle）。
minus_example_general: 查找僅在員工表而不在客戶表的姓名（通用語法依賴資料庫）。
minus_example_mysql: MySQL 不支援 MINUS，可用 LEFT JOIN 模擬。
minus_example_oracle: 查找僅在訂單表中的產品ID。

# LIMIT
limit_title: SQL LIMIT - 限制結果筆數
limit_syntax: LIMIT 限制查詢返回的筆數（支援於 MySQL）。
limit_example_general: 查詢前5名員工（通用語法依賴資料庫）。
limit_example_mysql: 查詢前5筆高薪員工。
limit_example_oracle: Oracle 使用 FETCH FIRST 模擬 LIMIT。

# 子查詢
subquery_title: SQL 子查詢 - 嵌套查詢
subquery_syntax: 子查詢嵌套在主查詢中，用於 WHERE 或 FROM 子句。
subquery_example_general: 查找薪資高於平均的員工。
subquery_example_mysql: 查找部門最高薪資的員工。
subquery_example_oracle: 查找有訂單的客戶。

# WITH
with_title: SQL WITH - 通用表達式（CTE）
with_syntax: WITH 定義通用表達式（CTE），簡化複雜查詢。
with_example_general: 使用 CTE 查詢高薪員工。
with_example_mysql: 使用 CTE 查詢部門人數。
with_example_oracle: 使用 CTE 查詢訂單總額。

# EXISTS
exists_title: SQL EXISTS - 檢查子查詢存在
exists_syntax: EXISTS 檢查子查詢是否返回結果。
exists_example_general: 查找有訂單的客戶。
exists_example_mysql: 查找有高薪員工的部門。
exists_example_oracle: 查找有歷史訂單的產品。

# CASE
case_title: SQL CASE - 條件表達式
case_syntax: CASE 提供條件邏輯，返回不同值。
case_example_general: 根據薪資分級員工。
case_example_mysql: 根據部門分類。
case_example_oracle: 根據訂單金額分級。

# 窗口函數
window_function_title: SQL 窗口函數 - 進階分析
window_function_syntax: 窗口函數在指定範圍內計算，如排名、累積總計等。
window_function_example_general: 按部門計算薪資排名。
window_function_example_mysql: 計算部門累積薪資（MySQL 8.0+ 支援）。
window_function_example_oracle: 按年份計算訂單總額排名。

# SEQUENCE 和 NEXTVAL
sequence_title: SQL SEQUENCE 和 NEXTVAL - 自動編號
sequence_syntax: SEQUENCE 和 NEXTVAL 產生自動編號（支援於 Oracle）。
sequence_example_general: 建立序列並插入員工（通用語法依賴資料庫）。
sequence_example_mysql: MySQL 使用 AUTO_INCREMENT 模擬。
sequence_example_oracle: 使用序列插入訂單。

# 算排名
rank_title: SQL 算排名 - 排名計算
rank_syntax: RANK 窗口函數計算排名。
rank_example_general: 按薪資排名員工。
rank_example_mysql: 按部門內薪資排名（MySQL 8.0+）。
rank_example_oracle: 按訂單金額排名。

# 算中位數
median_title: SQL 算中位數 - 中位數計算
median_syntax: 中位數計算（依資料庫實現不同）。
median_example_general: 計算員工薪資中位數（通用語法依賴資料庫）。
median_example_mysql: MySQL 8.0+ 使用窗口函數模擬中位數。
median_example_oracle: 使用 MEDIAN 函數。

# 算累積總計
cumulative_sum_title: SQL 算累積總計 - 累積計算
cumulative_sum_syntax: 使用窗口函數計算累積總計。
cumulative_sum_example_general: 按薪資排序計算累積薪資。
cumulative_sum_example_mysql: 按部門計算累積薪資（MySQL 8.0+）。
cumulative_sum_example_oracle: 按訂單日期計算累積金額。

# 算總合百分比
sum_percent_title: SQL 算總合百分比 - 計算比例
sum_percent_syntax: 使用窗口函數計算總和百分比。
sum_percent_example_general: 計算員工薪資佔總薪資的百分比。
sum_percent_example_mysql: 按部門計算薪資比例（MySQL 8.0+）。
sum_percent_example_oracle: 計算訂單金額比例。

# 算累積總合百分比
cumulative_sum_percent_title: SQL 算累積總合百分比 - 累積比例
cumulative_sum_percent_syntax: 使用窗口函數計算累積總和百分比。
cumulative_sum_percent_example_general: 按薪資排序計算累積薪資百分比。
cumulative_sum_percent_example_mysql: 按部門計算累積薪資比例（MySQL 8.0+）。
cumulative_sum_percent_example_oracle: 按訂單日期計算累積金額比例。

# 頁尾
footer_text: 最後編輯時間：2025年4月9日 | 聯絡信箱：[email protected] | © 2025 SQL資料庫百科全書。保留所有權利。